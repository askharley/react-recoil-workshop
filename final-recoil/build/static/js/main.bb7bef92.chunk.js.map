{"version":3,"sources":["utils/constants.js","store/atoms.js","components/tabs/Teams.js","store/selectors.js","components/tabs/Players.js","components/GameTabs.js","App.js","index.js"],"names":["teamColours","Object","freeze","inputState","atom","key","default","teamListState","playerListState","TeamList","teams","useRecoilValue","react_default","a","createElement","className","map","team","ListGroupItem","color","id","name","Teams","_useRecoilState","useRecoilState","_useRecoilState2","slicedToArray","teamList","setTeamList","_useRecoilState3","_useRecoilState4","teamName","setTeamName","Fragment","Row","Col","md","Input","type","placeholder","value","onChange","e","target","Button","onClick","newTeams","concat","toConsumableArray","length","teamDictionaryState","selector","get","_ref","dictionary","forEach","element","push","label","teamCountState","_ref2","playerCountState","_ref3","_ref4","players","PlayerList","player","Players","playerList","setPlayerList","teamDictionary","playerName","setPlayerName","_useState","useState","_useState2","playerTeam","setPlayerTeam","react_select_browser_esm","options","data","addPlayer","NavItemToggle","title","NavItem","NavLink","GameTabs","activeTab","setActiveTab","toggle","tab","Nav","tabs","TabContent","TabPane","tabId","tabs_Teams","tabs_Players","App","teamCount","playerCount","useEffect","console","log","Jumbotron","Card","CardBody","components_GameTabs","render","dist","document","getElementById"],"mappings":"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","file":"static/js/main.bb7bef92.chunk.js","sourcesContent":["export const teamColours = Object.freeze([\r\n  \"primary\",\r\n  \"info\",\r\n  \"danger\",\r\n  \"success\",\r\n  \"secondary\",\r\n  \"warning\"\r\n]);\r\n","import { atom } from \"recoil\";\r\n\r\nexport const inputState = atom({\r\n  key: \"inputState\",\r\n  default: []\r\n});\r\n\r\nexport const teamListState = atom({\r\n  key: \"teamListState\",\r\n  default: []\r\n});\r\n\r\nexport const playerListState = atom({\r\n  key: \"playerListState\",\r\n  default: []\r\n});\r\n","import React from \"react\";\r\nimport { Row, Col, Button, Input, ListGroupItem } from \"reactstrap\";\r\nimport { teamColours } from \"../../utils/constants\";\r\nimport { useRecoilValue, useRecoilState } from \"recoil\";\r\nimport { teamListState, inputState } from \"../../store/atoms\";\r\n\r\nfunction Teams() {\r\n  const [teamList, setTeamList] = useRecoilState(teamListState);\r\n  const [teamName, setTeamName] = useRecoilState(inputState);\r\n\r\n  const addTeam = () => {\r\n    const newTeams = [\r\n      ...teamList,\r\n      {\r\n        id: teamList.length,\r\n        name: teamName\r\n      }\r\n    ];\r\n\r\n    setTeamList(newTeams);\r\n    setTeamName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mt-3\">\r\n        <Col md=\"10\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Add team...\"\r\n            value={teamName}\r\n            onChange={e => setTeamName(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Button color=\"primary\" type=\"submit\" onClick={addTeam}>\r\n          Add\r\n        </Button>\r\n      </Row>\r\n      <TeamList />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TeamList() {\r\n  const teams = useRecoilValue(teamListState);\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {teams.map(team => (\r\n        <ListGroupItem color={teamColours[team.id]}>{team.name}</ListGroupItem>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Teams;\r\n","import { selector } from \"recoil\";\r\nimport { teamListState, playerListState } from \"./atoms\";\r\n\r\nexport const teamDictionaryState = selector({\r\n  key: \"teamDictionaryState\",\r\n  get: ({ get }) => {\r\n    const teams = get(teamListState);\r\n\r\n    let dictionary = [];\r\n\r\n    teams.forEach(element => {\r\n      dictionary.push({\r\n        label: element.name,\r\n        value: element.id\r\n      });\r\n    });\r\n\r\n    return dictionary;\r\n  }\r\n});\r\n\r\nexport const teamCountState = selector({\r\n  key: \"teamCountState\",\r\n  get: ({ get }) => {\r\n    const teams = get(teamListState);\r\n\r\n    return teams.length;\r\n  }\r\n});\r\n\r\nexport const playerCountState = selector({\r\n  key: \"playerCountState\",\r\n  get: ({ get }) => {\r\n    const players = get(playerListState);\r\n\r\n    return players.length;\r\n  }\r\n});\r\n\r\nexport const entityCountState = selector({\r\n  key: \"entityCountState\",\r\n  get: ({ get }) => {\r\n    const teams = get(teamListState);\r\n    const players = get(playerListState);\r\n\r\n    return { teams: teams.length, players: players.length };\r\n  }\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Input, ListGroupItem } from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { teamColours } from \"../../utils/constants\";\r\nimport { useRecoilValue, useRecoilState } from \"recoil\";\r\nimport { playerListState, inputState } from \"../../store/atoms\";\r\nimport { teamDictionaryState } from \"../../store/selectors\";\r\n\r\nfunction Players() {\r\n  const [playerList, setPlayerList] = useRecoilState(playerListState);\r\n  const teamDictionary = useRecoilValue(teamDictionaryState);\r\n  const [playerName, setPlayerName] = useRecoilState(inputState);\r\n  const [playerTeam, setPlayerTeam] = useState();\r\n\r\n  const addPlayer = () => {\r\n    const players = [\r\n      ...playerList,\r\n      {\r\n        id: playerList.length,\r\n        name: playerName,\r\n        team: playerTeam\r\n      }\r\n    ];\r\n\r\n    setPlayerList(players);\r\n    setPlayerName(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mt-3\">\r\n        <Col md=\"5\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Add player...\"\r\n            value={playerName}\r\n            onChange={e => setPlayerName(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Col md=\"5\">\r\n          <Select\r\n            options={teamDictionary}\r\n            onChange={data => setPlayerTeam(data.value)}\r\n          />\r\n        </Col>\r\n        <Button\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          onClick={() => {\r\n            addPlayer();\r\n            setPlayerName(\"\");\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </Row>\r\n      <PlayerList />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction PlayerList() {\r\n  const players = useRecoilValue(playerListState);\r\n\r\n  return (\r\n    <div className=\"mt-3\">\r\n      {players.map(player => (\r\n        <ListGroupItem color={teamColours[player.team]}>\r\n          {player.name}\r\n        </ListGroupItem>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Players;\r\n","import React, { useState } from \"react\";\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane } from \"reactstrap\";\r\nimport Teams from \"./tabs/Teams\";\r\nimport Players from \"./tabs/Players\";\r\n\r\nfunction GameTabs() {\r\n  const [activeTab, setActiveTab] = useState(\"1\");\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nav tabs>\r\n        <NavItemToggle title=\"Teams\" onClick={() => toggle(\"1\")} />\r\n        <NavItemToggle title=\"Players\" onClick={() => toggle(\"2\")} />\r\n      </Nav>\r\n      <TabContent activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n          <Teams />\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n          <Players />\r\n        </TabPane>\r\n      </TabContent>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction NavItemToggle({ title, onClick }) {\r\n  return (\r\n    <NavItem>\r\n      <NavLink onClick={onClick}>{title}</NavLink>\r\n    </NavItem>\r\n  );\r\n}\r\n\r\nexport default GameTabs;\r\n","import React, { useEffect } from \"react\";\r\nimport GameTabs from \"./components/GameTabs\";\r\nimport \"./styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Jumbotron, Card, CardBody, Row, Col } from \"reactstrap\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport {\r\n  teamCountState,\r\n  playerCountState,\r\n} from \"./store/selectors\";\r\n\r\nexport default function App() {\r\n  const teamCount = useRecoilValue(teamCountState);\r\n  const playerCount = useRecoilValue(playerCountState);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Render - Teams\");\r\n  }, [teamCount]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Render - Players\");\r\n  }, [playerCount]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Jumbotron>\r\n        <h1 className=\"display-3\">Team Track</h1>\r\n        <h4>\r\n          <Row>\r\n            <Col>Teams: {teamCount}</Col>\r\n            <Col>Players: {playerCount}</Col>\r\n          </Row>\r\n        </h4>\r\n      </Jumbotron>\r\n      <Card>\r\n        <CardBody>\r\n          <GameTabs />\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport App from \"./App\";\r\n\r\nrender(\r\n  <RecoilRoot>\r\n    <App />\r\n  </RecoilRoot>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}